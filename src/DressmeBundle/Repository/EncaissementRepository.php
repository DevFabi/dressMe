<?php

namespace DressmeBundle\Repository;

/**
 * EncaissementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EncaissementRepository extends \Doctrine\ORM\EntityRepository
{


    public function prestationMai()
    {
       $qb = $this->createQueryBuilder('e')
        ->select('COUNT(e)')
        ->andWhere("e.date between '2018-05-01' and '2018-05-31'");
        return $qb->getQuery()->getSingleScalarResult();
    }
    
    
    public function bestPrestation()
    {
          $qb = $this->createQueryBuilder('e')
        ->select('e.prestation')
        ->addSelect('COUNT(prestation) as total')
        ->orderBy('total')
        ->groupBy('e');
        return $qb->getQuery()->getResult();
    }





		public function findEncaissement()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT e FROM DressmeBundle:Encaissement e '
            )
            ->getResult();
    }

    public function bestPrestation2()
    {
         return $this->getEntityManager()
       ->createQuery(
                'SELECT prestation_id, count(*) FROM encaissement_prestation ORDER BY count(*) LIMIT 3'
            )
            ->getResult();
    }


        public function prestationMai2()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT e FROM DressmeBundle:Encaissement e WHERE e.date >= "2018-05-1" and where e.date <= "2018-05-31" '
            );
            return $qb->getQuery()->getResult();
    }

    public function counter() {
        $qb = $this->createQueryBuilder('e')
        ->select('COUNT(e)');
        return $qb->getQuery()->getSingleScalarResult();
    }

        public function counterPrix() {
        $qb = $this->createQueryBuilder('e')
        ->select('e')
        ->leftJoin('e.prestation', 'ep')
        ->addSelect('ep')
        ->addSelect('SUM(ep.prix)');
        return $qb->getQuery()->getSingleScalarResult();
    }
}
